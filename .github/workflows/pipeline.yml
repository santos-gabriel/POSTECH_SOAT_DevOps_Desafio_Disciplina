name: pipeline
on:
  push:

jobs:
  unit-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - run: mvn test
      - name: Generate JaCoCo Badge
        id: jacco
        uses: cicirello/jacoco-badge-generator@v2.0.1
      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"
      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: target/site/jacoco/
          
  build:
    name: Build Archive
    runs-on: ubuntu-latest
    needs: unit-test #code-analisys
    
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Build with Maven
      run: mvn -B package -DskipTests --file pom.xml      
    - name: Display structure of downloaded files
      run: ls -R
      working-directory: target/
    - name: Upload JAR
        #This uploads artifacts from your workflow allowing you to share data between jobs and store data once a workflow is complete.
      uses: actions/upload-artifact@v2
      with:
        #Set artifact name
        name: artifact
        #From this path
        path: ./target/demo-0.0.2.7-SNAPSHOT.jar 

  publish:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          package: '*.jar'
      - name: Publish package
        run: mvn --batch-mode deploy
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-STG:
    runs-on: ubuntu-latest
    environment:
      name: stg
    needs: publish

    if: github.ref == 'refs/heads/develop'
    steps:
      - name: Deploy
        shell: bash
        run:  |
          echo "Deploy STG"

  Smoketest:
    runs-on: ubuntu-latest
    needs: deploy-STG 
    environment:
      name: stg
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'

  testeIntegrados:
    runs-on: ubuntu-latest
    needs: Smoketest
    environment:
      name: stg
    if: github.ref == 'refs/heads/develop'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          sh 'src/main/scripts/testeIntegrado.sh'

  deploy-Pre:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/release'
    environment:
      name: pre
    needs: publish
    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy PRE"

  SmoketestPre:
    runs-on: ubuntu-latest
    needs: deploy-Pre
    environment:
      name: stg
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          sh 'src/main/scripts/smoketest.sh'
  
  testeFuncionais:
    runs-on: ubuntu-latest
    needs: SmoketestPre
    environment:
      name: stg
    if: github.ref == 'refs/heads/release'
    steps:
      - uses: actions/checkout@v3
      - name: Deploy
        shell: bash
        run: |
          sh 'src/main/scripts/testeFuncionais.sh'

  deploy-Prod:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment:
      name: prod
    needs: publish
    steps:
      - name: Deploy
        shell: bash
        run: |
          echo "Deploy PROD"

  deploy-aws:
    needs: build
    name: Deploy-aws
    runs-on: ubuntu-latest
    steps:
      - name: Download JAR
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: target/
      - name: Display structure of downloaded files
        run: ls -R
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secrect_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          wait_for_environment_recovery: 90
          use_existing_version_if_available: true
          application_name: FIAP-DEVOPS
          environment_name: FIAP-DEVOPS-env
          version_label: ${{github.SHA}}
          region: us-east-1
          deployment_package: ./target/demo-0.0.2.7-SNAPSHOT.jar  
